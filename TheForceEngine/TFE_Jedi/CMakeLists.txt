project(TFE_Jedi)
set(SOURCES
	Memory/allocator.cpp
	Memory/allocator.h
	Collision/collision.cpp
	Collision/collision.h
	Math/core_math.cpp
	Math/core_math.h
	Math/cosTable.cpp
	Math/cosTable.h
	Renderer/RClassic_GPU/debug.cpp
	Renderer/RClassic_GPU/debug.h
	Math/fixedPoint.h
	Renderer/RClassic_Float/fixedPoint20.h
	Renderer/RClassic_GPU/frustum.cpp
	Renderer/RClassic_GPU/frustum.h
	IMuse/imConst.cpp
	IMuse/imConst.h
	IMuse/imDigitalSound.cpp
	IMuse/imDigitalSound.h
	IMuse/imDigitalVolumeTable.h
	IMuse/imList.cpp
	IMuse/imList.h
	IMuse/imMidiCmd.cpp
	IMuse/imMidiCmd.h
	IMuse/imMidiPlayer.cpp
	IMuse/imMidiPlayer.h
	IMuse/imOpCodes.h
	IMuse/imSoundFader.cpp
	IMuse/imSoundFader.h
	IMuse/imTrigger.cpp
	IMuse/imTrigger.h
	IMuse/imuse.cpp
	IMuse/imuse.h
	InfSystem/infElevatorUpdateFunc.h
	InfSystem/infPublicTypes.h
	InfSystem/infState.cpp
	InfSystem/infState.h
	InfSystem/infSystem.cpp
	InfSystem/infSystem.h
	InfSystem/infTypesInternal.h
	Renderer/jediRenderer.cpp
	Renderer/jediRenderer.h
	Level/level.cpp
	Level/level.h
	Level/levelBin.cpp
	Level/levelBin.h
	Level/levelData.cpp
	Level/levelData.h
	Level/levelTextures.cpp
	Level/levelTextures.h
	Memory/list.cpp
	Memory/list.h
	InfSystem/message.cpp
	InfSystem/message.h
	IMuse/midiData.cpp
	IMuse/midiData.h
	Renderer/RClassic_GPU/modelGPU.cpp
	Renderer/RClassic_GPU/modelGPU.h
	Renderer/RClassic_GPU/objectPortalPlanes.cpp
	Renderer/RClassic_GPU/objectPortalPlanes.h
	Renderer/RClassic_Fixed/rclassicFixed.cpp
	Renderer/RClassic_Fixed/rclassicFixed.h
	Renderer/RClassic_Fixed/rclassicFixedSharedState.cpp
	Renderer/RClassic_Fixed/rclassicFixedSharedState.h
	Renderer/RClassic_Float/rclassicFloat.cpp
	Renderer/RClassic_Float/rclassicFloat.h
	Renderer/RClassic_Float/rclassicFloatSharedState.cpp
	Renderer/RClassic_Float/rclassicFloatSharedState.h
	Renderer/RClassic_GPU/rclassicGPU.cpp
	Renderer/RClassic_GPU/rclassicGPU.h
	Renderer/rcommon.cpp
	Renderer/rcommon.h
	Renderer/redgePair.h
	Renderer/RClassic_Fixed/redgePairFixed.cpp
	Renderer/RClassic_Fixed/redgePairFixed.h
	Renderer/RClassic_Float/redgePairFloat.cpp
	Renderer/RClassic_Float/redgePairFloat.h
	Renderer/RClassic_GPU/renderDebug.cpp
	Renderer/RClassic_GPU/renderDebug.h
	Renderer/RClassic_Fixed/rflatFixed.cpp
	Renderer/RClassic_Fixed/rflatFixed.h
	Renderer/RClassic_Float/rflatFloat.cpp
	Renderer/RClassic_Float/rflatFloat.h
	Level/rfont.cpp
	Level/rfont.h
	Renderer/RClassic_Fixed/rlightingFixed.cpp
	Renderer/RClassic_Fixed/rlightingFixed.h
	Renderer/RClassic_Float/rlightingFloat.cpp
	Renderer/RClassic_Float/rlightingFloat.h
	Renderer/rlimits.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed.cpp
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_ClipFunc.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_Clipping.cpp
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_Clipping.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_Culling.cpp
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_Culling.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_PolygonDraw.cpp
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_PolygonDraw.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_PolygonSetup.cpp
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_PolygonSetup.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_PolyRenderFunc.h
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_TransformAndLighting.cpp
	Renderer/RClassic_Fixed/robj3d_fixed/robj3dFixed_TransformAndLighting.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat.cpp
	Renderer/RClassic_Float/robj3d_float/robj3dFloat.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_ClipFunc.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_Clipping.cpp
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_Clipping.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_Culling.cpp
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_Culling.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_PolygonDraw.cpp
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_PolygonDraw.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_PolygonSetup.cpp
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_PolygonSetup.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_PolyRenderFunc.h
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_TransformAndLighting.cpp
	Renderer/RClassic_Float/robj3d_float/robj3dFloat_TransformAndLighting.h
	Level/robjData.cpp
	Level/robjData.h
	Level/robject.cpp
	Level/robject.h
	Renderer/robjectRender.h
	Level/roffscreenBuffer.cpp
	Level/roffscreenBuffer.h
	Renderer/rscanline.cpp
	Renderer/rscanline.h
	Level/rsector.cpp
	Level/rsector.h
	Renderer/RClassic_Fixed/rsectorFixed.cpp
	Renderer/RClassic_Fixed/rsectorFixed.h
	Renderer/RClassic_Float/rsectorFloat.cpp
	Renderer/RClassic_Float/rsectorFloat.h
	Renderer/RClassic_GPU/rsectorGPU.cpp
	Renderer/RClassic_GPU/rsectorGPU.h
	Renderer/rsectorRender.cpp
	Renderer/rsectorRender.h
	Level/rtexture.cpp
	Level/rtexture.h
	Level/rwall.cpp
	Level/rwall.h
	Renderer/RClassic_Fixed/rwallFixed.cpp
	Renderer/RClassic_Fixed/rwallFixed.h
	Renderer/RClassic_Float/rwallFloat.cpp
	Renderer/RClassic_Float/rwallFloat.h
	Renderer/rwallRender.h
	Renderer/rwallSegment.h
	Renderer/RClassic_GPU/sbuffer.cpp
	Renderer/RClassic_GPU/sbuffer.h
	#Renderer/RClassic_Float/screenDraw.cpp
	Renderer/screenDraw.cpp
	Renderer/RClassic_Float/screenDraw.h
	Renderer/screenDraw.h
	Renderer/RClassic_GPU/screenDrawGPU.cpp
	Renderer/RClassic_GPU/screenDrawGPU.h
	Renderer/RClassic_GPU/sectorDisplayList.cpp
	Renderer/RClassic_GPU/sectorDisplayList.h
	Serialization/serialization.cpp
	Serialization/serialization.h
	Renderer/RClassic_GPU/spriteDisplayList.cpp
	Renderer/RClassic_GPU/spriteDisplayList.h
	Task/task.cpp
	Task/task.h
	Task/taskMacros.h
	Renderer/textureInfo.h
	Renderer/virtualFramebuffer.cpp
	Renderer/virtualFramebuffer.h
)

#add_custom_target(${PROJECT_NAME} "" SOURCES ${SOURCES})
add_library(${PROJECT_NAME} OBJECT ${SOURCES})
target_sources(${PROJECT_NAME} PRIVATE ${SOURCES})
source_group(TREE ${CMAKE_CURRENT_SOURCE_DIR} PREFIX Sources FILES ${SOURCES})

# list(REMOVE_ITEM SOURCES "${CMAKE_CURRENT_SOURCE_DIR}/Renderer/RClassic_Float/screenDraw.cpp")
